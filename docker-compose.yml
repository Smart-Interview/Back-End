version: '3.8'
services:
  discovery-server:
    image: ilyaselmabrouki/discovery-server:v6
    container_name: discovery-server
    ports:
      - "8761:8761"
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  config-server:
    image: ilyaselmabrouki/config-server:v6
    container_name: config-server
    ports:
      - "9999:9999"
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      discovery-server:
        condition: service_healthy

  companydb:
    image: postgres:latest
    container_name: company_db
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=companyDB
    ports:
      - "5437:5432"
    depends_on:
      config-server:
        condition: service_healthy

  company-service:
    image: ilyaselmabrouki/company-service:v7
    container_name: company-service
    ports:
      - "8020:8020"
    environment:
      - COMPANY_DB_URL=jdbc:postgresql://company_db:5432/companyDB
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
      - CONFIG_SERVICE_URL=http://config-server:9999
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8020/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - companydb

  offerdb:
    image: postgres:latest
    container_name: offer_db
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=offerDB
    ports:
      - '5431:5432'
    depends_on:
      company-service:
        condition: service_healthy

  offer-service:
    image: ilyaselmabrouki/offer-service:v6
    container_name: offer-service
    ports:
      - "8040:8040"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
      - CONFIG_SERVICE_URL=http://config-server:9999
      - OFFER_DB_URL=jdbc:postgresql://offer_db:5432/offerDB
      - COMPANY_SERVICE_URL=http://company-service:8020/api/v1/companies
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8040/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - offerdb

  candidatedb:
    image: postgres:latest
    container_name: candidate_db
    environment:
      - POSTGRES_PASSWORD=ilyas
      - POSTGRES_USER=postgres
      - POSTGRES_DB=candidateDB
    ports:
      - '5432:5432'
    depends_on:
      config-server:
        condition: service_healthy

  candidate-service:
    image: ilyaselmabrouki/candidate-service:v7
    container_name: candidate-service
    ports:
      - "8070:8070"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
      - CONFIG_SERVICE_URL=http://config-server:9999
      - CANDIDATE_DB_URL=jdbc:postgresql://candidate_db:5432/candidateDB
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8070/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - candidatedb

  matchingdb:
    image: anassbe/db_matching-service
    container_name: matching_db
    environment:
      MYSQL_ROOT_PASSWORD: anass
      MYSQL_DATABASE: job_matching
    ports:
      - "3307:3306"
    volumes:
      - db-data:/var/lib/mysql
    depends_on:
      candidate-service:
        condition: service_healthy

  matching-service:
    image: anassbe/matching-service
    container_name: matching-service
    ports:
      - "5001:5000"
    environment:
      - GENAI_API_KEY=AIzaSyBOntkalUbDDmfDX1KFObU3HFvbc_ca35Q
      - DB_HOST=matching_db
      - DB_USER=root
      - DB_PASSWORD=anass
      - DB_NAME=job_matching
    depends_on:
      - matchingdb

  applicationdb:
    image: postgres:latest
    container_name: application_db
    environment:
      - POSTGRES_PASSWORD=ilyas
      - POSTGRES_USER=postgres
      - POSTGRES_DB=applicationDB
    ports:
      - '5433:5432'
    depends_on:
      - matching-service

  application-service:
    image: ilyaselmabrouki/application-service:v6
    container_name: application-service
    ports:
      - "8050:8050"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
      - CONFIG_SERVICE_URL=http://config-server:9999
      - APPLICATION_DB_URL=jdbc:postgresql://application_db:5432/applicationDB
      - CANDIDATE_SERVICE_URL=http://candidate-service:8070/api/v1/candidates
      - OFFER_SERVICE_URL=http://offer-service:8040/api/v1/offers
      - MATCHING_SERVICE_URL=http://matching-service:5000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8050/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - applicationdb

  question-service:
    image: ilyass20/qst-generation-app:latest
    container_name: question-service
    ports:
      - "5000:5000"
    depends_on:
      application-service:
        condition: service_healthy

  testdb:
    image: postgres:latest
    container_name: test_db
    environment:
      - POSTGRES_PASSWORD=ilyas
      - POSTGRES_USER=postgres
      - POSTGRES_DB=testDB
    ports:
      - '5435:5432'
    depends_on:
      - question-service

  test-service:
    image: ilyaselmabrouki/test-service:v6
    container_name: test-service
    ports:
      - "8060:8060"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-server:8761/eureka/
      - CONFIG_SERVICE_URL=http://config-server:9999
      - TEST_DB_URL=jdbc:postgresql://test_db:5432/testDB
      - OFFER_SERVICE_URL=http://offer-service:8040/api/v1/offers
      - APPLICATION_SERVICE_URL=http://application-service:8050/api/v1/applications
      - CANDIDATE_SERVICE_URL=http://candidate-service:8070/api/v1/candidates
      - QUESTION_SERVICE_URL=http://question-service:5000/generate_questions
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8060/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      - testdb

volumes:
  db-data: