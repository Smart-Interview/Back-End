name: CI/CD Pipeline for Dockerization

on:
  push:
    branches:
      - main

jobs:
  build-and-push-config-server:
    name: Build Config Server Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution : 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml
        working-directory: ./config-server

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./config-server
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/config-server:v9

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./config-server
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/config-server:v9

  build-and-push-discovery-service:
    name: Build Discovery Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-config-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml
        working-directory: ./discovery-server

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./discovery-server
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-server:v6

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./discovery-server
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/discovery-server:v6

  build-and-push-candidate-service:
    name: Build Candidate Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-config-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml
        working-directory: ./candidate-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./candidate-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/candidate-service:v7

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./candidate-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/candidate-service:v7

  build-and-push-application-service:
    name: Build Application Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-candidate-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package -DskipTests --file pom.xml
        working-directory: ./application-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./application-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/application-service:v6

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./application-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/application-service:v6

  build-and-push-offer-service:
    name: Build Offer Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-application-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package -DskipTests --file pom.xml
        working-directory: ./offer-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./offer-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/offer-service:v7

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./offer-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/offer-service:v7

  build-and-push-test-service:
    name: Build Test Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-offer-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package -DskipTests --file pom.xml
        working-directory: ./test-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./test-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test-service:v7

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./test-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/test-service:v7

  build-and-push-company-service:
    name: Build Company Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-offer-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package -DskipTests --file pom.xml
        working-directory: ./company-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./company-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/company-service:v8

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./company-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/company-service:v8

  build-and-push-report-service:
    name: Build Report Service Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-company-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package -DskipTests --file pom.xml
        working-directory: ./report-service

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./report-service
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/report-service:v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./report-service
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/report-service:v1

  build-and-push-gateway:
    name: Build Gateway Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml
        working-directory: ./gateway

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./gateway
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:v9

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./gateway
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:v9